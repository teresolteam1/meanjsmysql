{
  "name": "querybuilder",
  "description": "Module to create SQL and NoSQL queries.",
  "version": "1.1.0",
  "author": {
    "name": "Marc Riegel",
    "email": "mail@marclab.de"
  },
  "homepage": "https://github.com/mrcrgl/node-querybuilder",
  "repository": {
    "type": "git",
    "url": "git://github.com/mrcrgl/node-querybuilder.git"
  },
  "main": "./index",
  "engines": {
    "node": "*"
  },
  "readmeFilename": "README.md",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "dependencies": {
    "mongodb": "1.x"
  },
  "keywords": [
    "sql",
    "nosql",
    "query builder",
    "chaining"
  ],
  "license": "MIT",
  "readme": "node-querybuilder\n=================\n\nQuerybuilder have a simple, mongo like, API to create SQL and NoSQL queries. \n\n## Install\n```bash\n$ npm install querybuilder\n```\n\n## Supported storages / client libs\n\n* MongoDB (Tested with [node-mongodb-native](https://github.com/mongodb/node-mongodb-native))\n* MySQL (Tested with [node-mysql](https://github.com/felixge/node-mysql))\n\n## API\n\n### Create NoSQL query (MongoDB)\n\n```javascript\nvar Querybuilder = require('querybuilder');\nvar qb = new Querybuilder('mongodb');\n\n// Synchronous\nvar query = qb.select('*')\n              .where({name: 'horst'})\n              .offset(5)\n              .call();\n/* <- returns: \n{ type: 'select',\n  what: undefined,\n  where: { name: 'horst' },\n  limit: 50,\n  skip: 5,\n  sort: {},\n  set: {} }\n*/\n\n// Asynchronous\n// Define a handler. We simply forward the query to the callback\nqb.handler(function(query, callback) {\n  \n    // Your SQL connection can be placed here\n    callback(null, query);\n});\n\nqb.select('*')\n  .from('users') // just for campability to mysql\n  .where({name: 'horst'})\n  .offset(5)\n  .call(function(err, query) {\n    if (err) throw new Error(err);\n    \n    console.dir(query);\n    // <- equal to synchronous\n});\n```\n\n### Create SQL query (MySQL)\n\n```javascript\n\nvar Querybuilder = require('querybuilder');\nvar qb = new Querybuilder('mysql');\n\n// Synchronous\nvar query = qb.select('*')\n              .from('users')\n              .where({name: 'horst'})\n              .offset(5)\n              .call();\n// <- returns: 'SELECT * FROM `users` WHERE (`name` = \\'horst\\') LIMIT 50,5'\n\n\n// Asynchronous\n// Define a handler. We simply forward the query to the callback\nqb.handler(function(query, callback) {\n  \n    // Your SQL connection can be placed here\n    callback(null, query);\n});\n\nqb.select('*')\n  .from('users')\n  .where({name: 'horst'})\n  .offset(5)\n  .call(function(err, query) {\n    if (err) throw new Error(err);\n    \n    console.dir(query);\n    // <- equal to synchronous\n});\n```\n\nModule under MIT Licence\n",
  "bugs": {
    "url": "https://github.com/mrcrgl/node-querybuilder/issues"
  },
  "_id": "querybuilder@1.1.0",
  "dist": {
    "shasum": "6f35578061d08f803b2c24b333c64295c2f3c373",
    "tarball": "http://registry.npmjs.org/querybuilder/-/querybuilder-1.1.0.tgz"
  },
  "_from": "querybuilder@*",
  "_npmVersion": "1.2.19",
  "_npmUser": {
    "name": "mrcrgl",
    "email": "mail@marclab.de"
  },
  "maintainers": [
    {
      "name": "mrcrgl",
      "email": "mail@marclab.de"
    }
  ],
  "directories": {},
  "_shasum": "6f35578061d08f803b2c24b333c64295c2f3c373",
  "_resolved": "https://registry.npmjs.org/querybuilder/-/querybuilder-1.1.0.tgz"
}
